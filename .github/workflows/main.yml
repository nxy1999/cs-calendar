# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ "major" ]
#  push:
#    branches:
#      - master
  schedule:
    - cron: '0 * * * *'  # 设置定时任务每小时执行一次

#jobs:
#  trigger:
#    runs-on: ubuntu-latest
#    steps:
#    - name: Trigger another workflow via repository_dispatch
#      run: |
#        curl -X POST -H "Accept: application/vnd.github.v3+json" \
#            -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
#            https://api.github.com/repos/nxy1999/cs-calender/dispatches \
#            -d '{"event_type": "major"}'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: python update ics file
        run: |
          python main.py

      - name: Commit and push changes
        run: |
          git config --local user.email "2924157356@qq.com"
          git config --local user.name "nxy"
#          git pull
          git add matches_calendar.ics
          git commit -m "Update match data" || echo "No changes to commit"
          git push origin master # Push changes
          echo "Changes pushed to GitHub repository"
        env:
          github_token: ${{ secrets.ACCESS_TOKEN }}

